# Verus RPC Server Production Configuration
# This configuration is for production deployment with full security enabled

[verus]
# The URL and port of your Verus daemon RPC endpoint
rpc_url = "http://127.0.0.1:27486"
# RPC username (from your verus.conf file)
rpc_user = "your_rpc_username"
# RPC password (from your verus.conf file)
rpc_password = "your_rpc_password"
# Connection timeout in seconds
timeout_seconds = 30
# Maximum retry attempts
max_retries = 3

[server]
# Server address to bind to (0.0.0.0 for all interfaces)
bind_address = "0.0.0.0"
# Server port
port = 8080
# Maximum request size in bytes
max_request_size = 1048576
# Worker threads (0 for auto-detect)
worker_threads = 0
# Enable SSL/TLS (should be handled by reverse proxy)
ssl_enabled = false
# Enable response compression
compression_enabled = true
# Minimum response size for compression (bytes)
compression_min_size = 1024

[security]
# Allowed CORS origins (restrict in production)
cors_origins = ["https://yourdomain.com"]
# Allowed CORS methods
cors_methods = ["GET", "POST", "OPTIONS"]
# Allowed CORS headers
cors_headers = ["Content-Type", "Authorization", "Accept"]
# Enable request logging
enable_request_logging = true
# Enable security headers
enable_security_headers = true
# Trusted proxy headers
trusted_proxy_headers = ["X-Forwarded-For", "X-Real-IP"]
# Enable custom security headers
enable_custom_headers = true
# Custom security header value
custom_security_header = "X-Verus-RPC-Server"
# Method-specific rate limits
method_rate_limits = {}
# Development mode - DISABLED for production
development_mode = false

[security.jwt]
# JWT secret key (generate a secure random key for production)
secret_key = "your-super-secret-jwt-key-that-is-at-least-32-characters-long"
# JWT token expiration time in seconds (1 hour)
expiration_seconds = 3600
# JWT issuer
issuer = "verus-rpc-server"
# JWT audience
audience = "verus-clients"

# PoW Configuration (Proof of Work for token issuance)
[security.pow]
# Default difficulty for PoW challenges (hex string)
# Easy: "ffffffff" (for testing)
# Medium: "0000ffff" (default production)
# Hard: "000000ff" (premium access)
default_difficulty = "0000ffff"
# Challenge expiration time in minutes
challenge_expiration_minutes = 10
# Token duration for PoW-validated tokens (seconds)
token_duration_seconds = 14400  # 4 hours
# Rate limit multiplier for PoW-validated tokens
rate_limit_multiplier = 2.0
# Enable PoW challenges
enabled = false

# Mining Pool Configuration (optional - for enhanced PoW validation)
[security.mining_pool]
# Pool server URL
pool_url = "https://pool.example.com"
# Pool API key for authentication
api_key = "your-pool-api-key"
# Pool public key for signature verification (32-byte hex string)
public_key = "0000000000000000000000000000000000000000000000000000000000000000"
# Connection timeout in seconds
timeout_seconds = 30
# Maximum retry attempts
max_retries = 3
# Circuit breaker threshold (number of failures before opening)
circuit_breaker_threshold = 5
# Circuit breaker timeout in seconds
circuit_breaker_timeout = 60
# Rate limiting requests per minute
requests_per_minute = 100
# Enable pool integration
enabled = false

[rate_limit]
# Requests per minute per IP
requests_per_minute = 1000
# Burst size
burst_size = 100
# Enable rate limiting
enabled = true

[logging]
# Log level (info for production)
level = "info"
# Enable structured logging
structured_logging = true
# Log format (json for production)
format = "json"

[cache]
# Enable Redis caching
enabled = true
# Redis connection URL
redis_url = "redis://127.0.0.1:6379"
# Default cache TTL in seconds
default_ttl = 300
# Maximum cache size in bytes
max_size = 104857600  # 100MB
