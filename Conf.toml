# Verus RPC Server Configuration
# Replace these values with your actual Verus daemon settings
#
# Available HTTP Endpoints:
# - POST /                    - JSON-RPC 2.0 endpoint
# - GET /health              - Health check (JSON)
# - GET /metrics             - Metrics (JSON)
# - GET /metrics/prometheus  - Prometheus exposition format (text/plain)
# - POST /pool/share         - Mining pool share validation
# - GET /pool/metrics        - Mining pool metrics
# - POST /payments/request    - Create a payment quote (z-address + amount)
# - POST /payments/submit     - Submit signed raw tx for payment
# - GET  /payments/status/{id}- Check payment status and retrieve JWT

[verus]
# The URL and port of your Verus daemon RPC endpoint
rpc_url = "http://127.0.0.1:27486"
# RPC username (from your verus.conf file)
rpc_user = "your_rpc_username"
# RPC password (from your verus.conf file)
rpc_password = "your_rpc_password"
# Connection timeout in seconds
timeout_seconds = 30
# Maximum retry attempts
max_retries = 3

# Circuit breaker configuration for daemon connectivity
[verus.circuit_breaker]
failure_threshold = 5
recovery_timeout_seconds = 60
half_open_max_requests = 3

[server]
# Server address to bind to
bind_address = "127.0.0.1"
# Server port
port = 8080
# Maximum request size in bytes
max_request_size = 1048576
# Worker threads (0 for auto-detect)
worker_threads = 0
# Enable SSL/TLS
ssl_enabled = false
# Enable response compression
compression_enabled = true
# Minimum response size for compression (bytes)
compression_min_size = 1024

[security]
# Allowed CORS origins
cors_origins = ["*"]
# Allowed CORS methods
cors_methods = ["GET", "POST", "OPTIONS"]
# Allowed CORS headers
cors_headers = ["Content-Type", "Authorization", "Accept"]
# Enable request logging
enable_request_logging = true
# Enable security headers
enable_security_headers = true
# Trusted proxy headers
trusted_proxy_headers = ["X-Forwarded-For"]
# Enable custom security headers
enable_custom_headers = false
# Custom security header value
custom_security_header = ""
# Method-specific rate limits
method_rate_limits = {}
# Development mode - allows local access without authentication (WARNING: disable in production!)
development_mode = true

[security.jwt]
# JWT secret key (generate a secure random key for production)
secret_key = "your-super-secret-jwt-key-that-is-at-least-32-characters-long"
# JWT token expiration time in seconds
expiration_seconds = 3600
# JWT issuer
issuer = "verus-rpc-server"
# JWT audience
audience = "verus-clients"

# PoW Configuration (Proof of Work for token issuance)
[security.pow]
# Default difficulty for PoW challenges (hex string)
# Easy: "ffffffff" (for testing)
# Medium: "0000ffff" (default production)
# Hard: "000000ff" (premium access)
default_difficulty = "0000ffff"
# Challenge expiration time in minutes
challenge_expiration_minutes = 10
# Token duration for PoW-validated tokens (seconds)
token_duration_seconds = 14400  # 4 hours
# Rate limit multiplier for PoW-validated tokens
rate_limit_multiplier = 2.0
# Enable PoW challenges
enabled = true

# Mining Pool Configuration (optional - for enhanced PoW validation)
[security.mining_pool]
# Pool server URL
pool_url = "https://pool.example.com"
# Pool API key for authentication
api_key = "your-pool-api-key"
# Pool public key for signature verification (32-byte hex string)
public_key = "0000000000000000000000000000000000000000000000000000000000000000"
# Connection timeout in seconds
timeout_seconds = 30
# Maximum retry attempts
max_retries = 3
# Circuit breaker threshold (number of failures before opening)
circuit_breaker_threshold = 5
# Circuit breaker timeout in seconds
circuit_breaker_timeout = 60
# Rate limiting requests per minute
requests_per_minute = 100
# Enable pool integration
enabled = false

[rate_limit]
# Requests per minute per IP
requests_per_minute = 1000
# Burst size
burst_size = 100
# Enable rate limiting
enabled = true

[logging]
# Log level (trace, debug, info, warn, error)
level = "info"
# Log format (json, text)
format = "json"
# Enable structured logging
structured = true

[cache]
# Enable response caching
enabled = false
# Redis connection URL (supports authentication: redis://username:password@host:port)
# Examples:
# - No auth: redis://127.0.0.1:6379
# - With password: redis://:password@127.0.0.1:6379
# - With username/password: redis://username:password@127.0.0.1:6379
# - With SSL: rediss://127.0.0.1:6379
redis_url = "redis://127.0.0.1:6379"
# Default TTL in seconds
default_ttl = 300
# Maximum cache size in bytes
max_size = 104857600

# Payments configuration
[payments]
# Enable the payments REST API
enabled = true
# Allowed shielded address types (orchard, sapling)
address_types = ["orchard", "sapling"]
# Default shielded address type
default_address_type = "orchard"
# Confirmations required for provisional token
min_confirmations = 1
# Session/quote TTL in minutes
session_ttl_minutes = 30
# Require viewing key presence to verify payments
require_viewing_key = false
# Optional viewing keys to import at startup (leave empty to skip)
viewing_keys = []
# Rescan mode for viewing key import: "yes", "no", or "whenkeyisnew"
viewing_key_rescan = "whenkeyisnew"

[[payments.tiers]]
id = "basic"
amount_vrsc = 1.0
description = "Basic access"
permissions = ["read"]

[[payments.tiers]]
id = "pro"
amount_vrsc = 5.0
description = "Pro access"
permissions = ["read", "write"]